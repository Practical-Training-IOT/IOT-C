// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package alarm

import (
	"context"
	"fmt"
)

type AlarmListReq struct {
	Page int32 `thrift:"page,1" frugal:"1,default,i32" json:"page"`
	Size int32 `thrift:"size,2" frugal:"2,default,i32" json:"size"`
}

func NewAlarmListReq() *AlarmListReq {
	return &AlarmListReq{}
}

func (p *AlarmListReq) InitDefault() {
}

func (p *AlarmListReq) GetPage() (v int32) {
	return p.Page
}

func (p *AlarmListReq) GetSize() (v int32) {
	return p.Size
}
func (p *AlarmListReq) SetPage(val int32) {
	p.Page = val
}
func (p *AlarmListReq) SetSize(val int32) {
	p.Size = val
}

func (p *AlarmListReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmListReq(%+v)", *p)
}

var fieldIDToName_AlarmListReq = map[int16]string{
	1: "page",
	2: "size",
}

type AlarmListResp struct {
	List []*AlarmList `thrift:"list,1" frugal:"1,default,list<AlarmList>" json:"list"`
}

func NewAlarmListResp() *AlarmListResp {
	return &AlarmListResp{}
}

func (p *AlarmListResp) InitDefault() {
}

func (p *AlarmListResp) GetList() (v []*AlarmList) {
	return p.List
}
func (p *AlarmListResp) SetList(val []*AlarmList) {
	p.List = val
}

func (p *AlarmListResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmListResp(%+v)", *p)
}

var fieldIDToName_AlarmListResp = map[int16]string{
	1: "list",
}

type AlarmList struct {
	Id      int32  `thrift:"id,1" frugal:"1,default,i32" json:"id"`
	Title   string `thrift:"title,2" frugal:"2,default,string" json:"title"`
	Enabled bool   `thrift:"enabled,3" frugal:"3,default,bool" json:"enabled"`
	Type    string `thrift:"type,4" frugal:"4,default,string" json:"type"`
	Level   string `thrift:"level,5" frugal:"5,default,string" json:"level"`
	Desc    string `thrift:"desc,6" frugal:"6,default,string" json:"desc"`
	Time    string `thrift:"time,7" frugal:"7,default,string" json:"time"`
}

func NewAlarmList() *AlarmList {
	return &AlarmList{}
}

func (p *AlarmList) InitDefault() {
}

func (p *AlarmList) GetId() (v int32) {
	return p.Id
}

func (p *AlarmList) GetTitle() (v string) {
	return p.Title
}

func (p *AlarmList) GetEnabled() (v bool) {
	return p.Enabled
}

func (p *AlarmList) GetType() (v string) {
	return p.Type
}

func (p *AlarmList) GetLevel() (v string) {
	return p.Level
}

func (p *AlarmList) GetDesc() (v string) {
	return p.Desc
}

func (p *AlarmList) GetTime() (v string) {
	return p.Time
}
func (p *AlarmList) SetId(val int32) {
	p.Id = val
}
func (p *AlarmList) SetTitle(val string) {
	p.Title = val
}
func (p *AlarmList) SetEnabled(val bool) {
	p.Enabled = val
}
func (p *AlarmList) SetType(val string) {
	p.Type = val
}
func (p *AlarmList) SetLevel(val string) {
	p.Level = val
}
func (p *AlarmList) SetDesc(val string) {
	p.Desc = val
}
func (p *AlarmList) SetTime(val string) {
	p.Time = val
}

func (p *AlarmList) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmList(%+v)", *p)
}

var fieldIDToName_AlarmList = map[int16]string{
	1: "id",
	2: "title",
	3: "enabled",
	4: "type",
	5: "level",
	6: "desc",
	7: "time",
}

type AlarmDetailReq struct {
	Id int32 `thrift:"id,1" frugal:"1,default,i32" json:"id"`
}

func NewAlarmDetailReq() *AlarmDetailReq {
	return &AlarmDetailReq{}
}

func (p *AlarmDetailReq) InitDefault() {
}

func (p *AlarmDetailReq) GetId() (v int32) {
	return p.Id
}
func (p *AlarmDetailReq) SetId(val int32) {
	p.Id = val
}

func (p *AlarmDetailReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmDetailReq(%+v)", *p)
}

var fieldIDToName_AlarmDetailReq = map[int16]string{
	1: "id",
}

type AlarmDetailResp struct {
	Name     string `thrift:"name,1" frugal:"1,default,string" json:"name"`
	Type     string `thrift:"type,2" frugal:"2,default,string" json:"type"`
	Status   string `thrift:"status,3" frugal:"3,default,string" json:"status"`
	Level    string `thrift:"level,4" frugal:"4,default,string" json:"level"`
	Time     string `thrift:"time,5" frugal:"5,default,string" json:"time"`
	Desc     string `thrift:"desc,6" frugal:"6,default,string" json:"desc"`
	Triggers string `thrift:"triggers,7" frugal:"7,default,string" json:"triggers"`
	Notifies string `thrift:"notifies,8" frugal:"8,default,string" json:"notifies"`
	Silence  string `thrift:"silence,9" frugal:"9,default,string" json:"silence"`
}

func NewAlarmDetailResp() *AlarmDetailResp {
	return &AlarmDetailResp{}
}

func (p *AlarmDetailResp) InitDefault() {
}

func (p *AlarmDetailResp) GetName() (v string) {
	return p.Name
}

func (p *AlarmDetailResp) GetType() (v string) {
	return p.Type
}

func (p *AlarmDetailResp) GetStatus() (v string) {
	return p.Status
}

func (p *AlarmDetailResp) GetLevel() (v string) {
	return p.Level
}

func (p *AlarmDetailResp) GetTime() (v string) {
	return p.Time
}

func (p *AlarmDetailResp) GetDesc() (v string) {
	return p.Desc
}

func (p *AlarmDetailResp) GetTriggers() (v string) {
	return p.Triggers
}

func (p *AlarmDetailResp) GetNotifies() (v string) {
	return p.Notifies
}

func (p *AlarmDetailResp) GetSilence() (v string) {
	return p.Silence
}
func (p *AlarmDetailResp) SetName(val string) {
	p.Name = val
}
func (p *AlarmDetailResp) SetType(val string) {
	p.Type = val
}
func (p *AlarmDetailResp) SetStatus(val string) {
	p.Status = val
}
func (p *AlarmDetailResp) SetLevel(val string) {
	p.Level = val
}
func (p *AlarmDetailResp) SetTime(val string) {
	p.Time = val
}
func (p *AlarmDetailResp) SetDesc(val string) {
	p.Desc = val
}
func (p *AlarmDetailResp) SetTriggers(val string) {
	p.Triggers = val
}
func (p *AlarmDetailResp) SetNotifies(val string) {
	p.Notifies = val
}
func (p *AlarmDetailResp) SetSilence(val string) {
	p.Silence = val
}

func (p *AlarmDetailResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmDetailResp(%+v)", *p)
}

var fieldIDToName_AlarmDetailResp = map[int16]string{
	1: "name",
	2: "type",
	3: "status",
	4: "level",
	5: "time",
	6: "desc",
	7: "triggers",
	8: "notifies",
	9: "silence",
}

type AlarmSearchReq struct {
	Title string `thrift:"title,1" frugal:"1,default,string" json:"title"`
}

func NewAlarmSearchReq() *AlarmSearchReq {
	return &AlarmSearchReq{}
}

func (p *AlarmSearchReq) InitDefault() {
}

func (p *AlarmSearchReq) GetTitle() (v string) {
	return p.Title
}
func (p *AlarmSearchReq) SetTitle(val string) {
	p.Title = val
}

func (p *AlarmSearchReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmSearchReq(%+v)", *p)
}

var fieldIDToName_AlarmSearchReq = map[int16]string{
	1: "title",
}

type AlarmSearchResp struct {
	List []*AlarmList `thrift:"list,1" frugal:"1,default,list<AlarmList>" json:"list"`
}

func NewAlarmSearchResp() *AlarmSearchResp {
	return &AlarmSearchResp{}
}

func (p *AlarmSearchResp) InitDefault() {
}

func (p *AlarmSearchResp) GetList() (v []*AlarmList) {
	return p.List
}
func (p *AlarmSearchResp) SetList(val []*AlarmList) {
	p.List = val
}

func (p *AlarmSearchResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmSearchResp(%+v)", *p)
}

var fieldIDToName_AlarmSearchResp = map[int16]string{
	1: "list",
}

type Alarm interface {
	AlarmList(ctx context.Context, req *AlarmListReq) (r *AlarmListResp, err error)

	AlarmDetail(ctx context.Context, req *AlarmDetailReq) (r *AlarmDetailResp, err error)

	AlarmSearch(ctx context.Context, req *AlarmSearchReq) (r *AlarmSearchResp, err error)
}

type AlarmAlarmListArgs struct {
	Req *AlarmListReq `thrift:"req,1" frugal:"1,default,AlarmListReq" json:"req"`
}

func NewAlarmAlarmListArgs() *AlarmAlarmListArgs {
	return &AlarmAlarmListArgs{}
}

func (p *AlarmAlarmListArgs) InitDefault() {
}

var AlarmAlarmListArgs_Req_DEFAULT *AlarmListReq

func (p *AlarmAlarmListArgs) GetReq() (v *AlarmListReq) {
	if !p.IsSetReq() {
		return AlarmAlarmListArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AlarmAlarmListArgs) SetReq(val *AlarmListReq) {
	p.Req = val
}

func (p *AlarmAlarmListArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AlarmAlarmListArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmListArgs(%+v)", *p)
}

var fieldIDToName_AlarmAlarmListArgs = map[int16]string{
	1: "req",
}

type AlarmAlarmListResult struct {
	Success *AlarmListResp `thrift:"success,0,optional" frugal:"0,optional,AlarmListResp" json:"success,omitempty"`
}

func NewAlarmAlarmListResult() *AlarmAlarmListResult {
	return &AlarmAlarmListResult{}
}

func (p *AlarmAlarmListResult) InitDefault() {
}

var AlarmAlarmListResult_Success_DEFAULT *AlarmListResp

func (p *AlarmAlarmListResult) GetSuccess() (v *AlarmListResp) {
	if !p.IsSetSuccess() {
		return AlarmAlarmListResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AlarmAlarmListResult) SetSuccess(x interface{}) {
	p.Success = x.(*AlarmListResp)
}

func (p *AlarmAlarmListResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AlarmAlarmListResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmListResult(%+v)", *p)
}

var fieldIDToName_AlarmAlarmListResult = map[int16]string{
	0: "success",
}

type AlarmAlarmDetailArgs struct {
	Req *AlarmDetailReq `thrift:"req,1" frugal:"1,default,AlarmDetailReq" json:"req"`
}

func NewAlarmAlarmDetailArgs() *AlarmAlarmDetailArgs {
	return &AlarmAlarmDetailArgs{}
}

func (p *AlarmAlarmDetailArgs) InitDefault() {
}

var AlarmAlarmDetailArgs_Req_DEFAULT *AlarmDetailReq

func (p *AlarmAlarmDetailArgs) GetReq() (v *AlarmDetailReq) {
	if !p.IsSetReq() {
		return AlarmAlarmDetailArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AlarmAlarmDetailArgs) SetReq(val *AlarmDetailReq) {
	p.Req = val
}

func (p *AlarmAlarmDetailArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AlarmAlarmDetailArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmDetailArgs(%+v)", *p)
}

var fieldIDToName_AlarmAlarmDetailArgs = map[int16]string{
	1: "req",
}

type AlarmAlarmDetailResult struct {
	Success *AlarmDetailResp `thrift:"success,0,optional" frugal:"0,optional,AlarmDetailResp" json:"success,omitempty"`
}

func NewAlarmAlarmDetailResult() *AlarmAlarmDetailResult {
	return &AlarmAlarmDetailResult{}
}

func (p *AlarmAlarmDetailResult) InitDefault() {
}

var AlarmAlarmDetailResult_Success_DEFAULT *AlarmDetailResp

func (p *AlarmAlarmDetailResult) GetSuccess() (v *AlarmDetailResp) {
	if !p.IsSetSuccess() {
		return AlarmAlarmDetailResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AlarmAlarmDetailResult) SetSuccess(x interface{}) {
	p.Success = x.(*AlarmDetailResp)
}

func (p *AlarmAlarmDetailResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AlarmAlarmDetailResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmDetailResult(%+v)", *p)
}

var fieldIDToName_AlarmAlarmDetailResult = map[int16]string{
	0: "success",
}

type AlarmAlarmSearchArgs struct {
	Req *AlarmSearchReq `thrift:"req,1" frugal:"1,default,AlarmSearchReq" json:"req"`
}

func NewAlarmAlarmSearchArgs() *AlarmAlarmSearchArgs {
	return &AlarmAlarmSearchArgs{}
}

func (p *AlarmAlarmSearchArgs) InitDefault() {
}

var AlarmAlarmSearchArgs_Req_DEFAULT *AlarmSearchReq

func (p *AlarmAlarmSearchArgs) GetReq() (v *AlarmSearchReq) {
	if !p.IsSetReq() {
		return AlarmAlarmSearchArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AlarmAlarmSearchArgs) SetReq(val *AlarmSearchReq) {
	p.Req = val
}

func (p *AlarmAlarmSearchArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AlarmAlarmSearchArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmSearchArgs(%+v)", *p)
}

var fieldIDToName_AlarmAlarmSearchArgs = map[int16]string{
	1: "req",
}

type AlarmAlarmSearchResult struct {
	Success *AlarmSearchResp `thrift:"success,0,optional" frugal:"0,optional,AlarmSearchResp" json:"success,omitempty"`
}

func NewAlarmAlarmSearchResult() *AlarmAlarmSearchResult {
	return &AlarmAlarmSearchResult{}
}

func (p *AlarmAlarmSearchResult) InitDefault() {
}

var AlarmAlarmSearchResult_Success_DEFAULT *AlarmSearchResp

func (p *AlarmAlarmSearchResult) GetSuccess() (v *AlarmSearchResp) {
	if !p.IsSetSuccess() {
		return AlarmAlarmSearchResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AlarmAlarmSearchResult) SetSuccess(x interface{}) {
	p.Success = x.(*AlarmSearchResp)
}

func (p *AlarmAlarmSearchResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AlarmAlarmSearchResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AlarmAlarmSearchResult(%+v)", *p)
}

var fieldIDToName_AlarmAlarmSearchResult = map[int16]string{
	0: "success",
}
